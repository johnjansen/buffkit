---
name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        go-version: [1.21, 1.22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run vet
        run: go vet ./...

      - name: Install Godog
        run: go install github.com/cucumber/godog/cmd/godog@latest

      - name: Run tests with coverage
        run: |
          # Run feature tests with cross-package coverage
          cd features
          go test -coverprofile=../coverage.out -covermode=atomic \
            -coverpkg=github.com/johnjansen/buffkit,github.com/johnjansen/buffkit/auth,github.com/johnjansen/buffkit/secure,github.com/johnjansen/buffkit/ssr,github.com/johnjansen/buffkit/mail,github.com/johnjansen/buffkit/jobs,github.com/johnjansen/buffkit/components,github.com/johnjansen/buffkit/importmap .
          cd ..
        env:
          REDIS_URL: redis://localhost:6379/0

      - name: Display coverage summary
        run: |
          echo "Coverage Summary:"
          go tool cover -func=coverage.out | tail -5

      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.22'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          flags: unittests
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m
